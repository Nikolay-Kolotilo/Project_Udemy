/*Lec_119__React imperative&declarative programming Virtual DOM
            https://tproger.ru/translations/imperative-declarative-programming-concepts/
            https://habr.com/ru/post/256965/
0:40. SPA - SinglPageApplication - Приложение на одной странице. При этом без перезагрузки страницы.
2:50.   Императивный подход - говорит как именно прийти к результату

        Декларативный - говорит какой результат нам нужен.  
Создавать интерактивные пользовательские интерфейсы на React — приятно и просто. 
Вам достаточно описать, как части интерфейса приложения выглядят в разных состояниях. 
React будет своевременно их обновлять, когда данные изменяются.
Декларативные представления сделают код более предсказуемым и упростят отладку.

5:25.   React Основан на компонентах. Построен на UI (user interface) компонентах
Создавайте инкапсулированные компоненты с собственным состоянием, 
а затем объединяйте их в сложные пользовательские интерфейсы.
Поскольку логика компонента написана на JavaScript, а не содержится в шаблонах, 
можно с лёгкостью передавать самые разные данные по всему приложению и держать состояние вне DOM.
7:50.   Научитесь однажды — пишите где угодно
Нам не нужно ничего знать про остальную часть вашего технологического стека, 
поэтому вы можете разрабатывать новую функциональность на React, не изменяя существующий код.
React также может работать на сервере, используя Node.js и на мобильных платформах, используя React Native.
9:00.   Отличительные особенности:
    1. React использует препроцессор JSX. - Это сметь JS и HTML
    2. Внутри React есть алгоритм позволяющий отслеживать какие части приложения изменились и обновлять только
       их, а не все приложение. Он называется reconsilation algoritm ил илгоритм сравнения.
    3. Virtual DOM. React использует рблегченные ДОМ узлы.
15:35.  Экосистема реакта. React Native
       */